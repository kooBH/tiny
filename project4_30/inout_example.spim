    .data
test_text:
    .asciiz "\nTest\n"

    .text
main:
    jal __main
    li      $v0, 10
    syscall #Term

output:
    sub     $sp, $sp, 8
    sw      $fp, 4($sp)
    sw      $ra, 0($sp)
    move    $fp, $sp

    li      $v0, 1
    syscall

    lw      $ra, 0($sp)
    lw      $fp, 4($sp)
    addi    $sp, $sp, 8
    jr      $ra
 
input:
    sub     $sp, $sp, 8
    sw      $fp, 4($sp)
    sw      $ra, 0($sp)
    move    $fp, $sp

    li      $v0, 5
    syscall

    lw      $ra, 0($sp)
    lw      $fp, 4($sp)
    addi    $sp, $sp, 8
    jr      $ra

__main:
    sub     $sp, $sp, 8
    sw      $fp, 4($sp)
    sw      $ra, 0($sp)
    move    $fp, $sp

#    li      $v0, 4
#    la      $a0, test_text
#    syscall

    # input() : CallK
    jal     input
    # return int store
    sub     $sp, $sp, 4
    sw      $v0, 0($sp)

    # 10 : ConstK
    li      $t0, 10
    sub     $sp, $sp, 4
    sw      $t0, 0($sp)

    # input() + 10 : OpK
    lw      $t0, 0($sp)
    addi    $sp, $sp, 4
    lw      $t1, 0($sp)
    addi    $sp, $sp, 4

    add     $t2, $t0, $t1

    sub     $sp, $sp, 4
    sw      $t2, 0($sp)


    # output(input()+10)
    lw      $a0, 0($sp)
    addi    $sp, $sp, 4
    jal     output

    lw      $ra, 0($sp)
    lw      $fp, 4($sp)
    addi    $sp, $sp, 8
    jr      $ra
